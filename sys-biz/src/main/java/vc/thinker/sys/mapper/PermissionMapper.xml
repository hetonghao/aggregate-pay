<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vc.thinker.sys.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="vc.thinker.sys.model.Permission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BOResultMap" type="vc.thinker.sys.bo.PermissionBO" extends="BaseResultMap" />
  
  <select id="findByUid" resultMap="BOResultMap" >
  	SELECT p.*
	FROM
		sys_permission p
	INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
	INNER JOIN sys_role r ON rp.role_id = r.id
	INNER JOIN sys_user_role ur ON ur.role_id = r.id
	INNER JOIN sys_user u ON u.id = ur.user_id
	WHERE
	u.is_deleted=0
	AND u.id = #{uid}
	<if test="userType != null">
		and p.user_type=#{userType}
	</if>
	ORDER BY
		p.sequence
  </select>
  
  <select id="findByRid" resultMap="BOResultMap" >
  	SELECT p.*
	FROM
		sys_permission p
	INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
	INNER JOIN sys_role r ON rp.role_id = r.id
	WHERE
	r.id = #{rid}
	ORDER BY p.sequence
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, info, name, sequence, type, value, group_name, user_type
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.sys.model.PermissionExample" resultMap="BOResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.sys.model.PermissionExample" >
    delete from sys_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vc.thinker.sys.model.Permission" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_permission (id, create_time, info, 
      name, sequence, type, 
      value, group_name, user_type
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{info,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="vc.thinker.sys.model.Permission" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.sys.model.PermissionExample" resultType="java.lang.Integer" >
    select count(*) from sys_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_permission
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.info != null" >
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.groupName != null" >
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_permission
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      info = #{record.info,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.sys.model.Permission" >
    update sys_permission
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.sys.model.Permission" >
    update sys_permission
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      info = #{info,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sequence = #{sequence,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>