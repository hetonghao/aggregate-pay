<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vc.thinker.sys.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="vc.thinker.sys.model.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="data_scope" jdbcType="CHAR" property="dataScope" />
    <result column="office_id" jdbcType="VARCHAR" property="officeId" />
    <result column="role_type" property="roleType" jdbcType="INTEGER" />
    <result column="is_sys" property="isSys" jdbcType="INTEGER" />
    <result column="useable" property="useable" jdbcType="INTEGER" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="BOResultMap" type="vc.thinker.sys.bo.RoleBO" >
  	<result column="officeName" jdbcType="VARCHAR" property="officeName" />
  </resultMap>
  <select id="findUserRole" parameterType="map" resultMap="BOResultMap">
		select distinct r.*
		from sys_role r
		INNER JOIN sys_user_role ur  on r.id=ur.role_id
		inner join sys_user u on u.id=ur.user_id
		where u.id=#{userId} 
		AND r.user_type=#{userType}
		order by r.`name`
    </select>
    <select id="findByDataScope" parameterType="map" resultMap="BOResultMap">
		select distinct r.*,o.name as officeName
		from sys_role r
		left JOIN sys_user_role ur  on r.id=ur.role_id
		left join sys_user u on u.id=ur.user_id
		left join sys_office o on o.id = r.office_id
		where r.user_type=#{userType}
		order by r.`name`
    </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, create_by, create_time, update_by, update_time, remarks, user_type, code, 
    data_scope, office_id, role_type, is_sys, useable
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.sys.model.RoleExample" resultMap="BOResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.sys.model.RoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="vc.thinker.sys.model.Role" useGeneratedKeys="true">
    insert into sys_role (id, name, create_by, 
      create_time, update_by, update_time, 
      remarks, user_type, code, 
      data_scope, office_id, role_type, 
      is_sys, useable)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{dataScope,jdbcType=CHAR}, #{officeId,jdbcType=VARCHAR}, #{roleType,jdbcType=INTEGER}, 
      #{isSys,jdbcType=INTEGER}, #{useable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="vc.thinker.sys.model.Role" useGeneratedKeys="true">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="dataScope != null">
        data_scope,
      </if>
      <if test="officeId != null">
        office_id,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="isSys != null" >
        is_sys,
      </if>
      <if test="useable != null" >
        useable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null">
        #{dataScope,jdbcType=CHAR},
      </if>
      <if test="officeId != null">
        #{officeId,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="isSys != null" >
        #{isSys,jdbcType=INTEGER},
      </if>
      <if test="useable != null" >
        #{useable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.sys.model.RoleExample" resultType="java.lang.Integer">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.dataScope != null">
        data_scope = #{record.dataScope,jdbcType=CHAR},
      </if>
      <if test="record.officeId != null">
        office_id = #{record.officeId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleType != null" >
        role_type = #{record.roleType,jdbcType=INTEGER},
      </if>
      <if test="record.isSys != null" >
        is_sys = #{record.isSys,jdbcType=INTEGER},
      </if>
      <if test="record.useable != null" >
        useable = #{record.useable,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      data_scope = #{record.dataScope,jdbcType=CHAR},
      office_id = #{record.officeId,jdbcType=VARCHAR},
      role_type = #{record.roleType,jdbcType=INTEGER},
      is_sys = #{record.isSys,jdbcType=INTEGER},
      useable = #{record.useable,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.sys.model.Role">
    update sys_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null">
        data_scope = #{dataScope,jdbcType=CHAR},
      </if>
      <if test="officeId != null">
        office_id = #{officeId,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="isSys != null" >
        is_sys = #{isSys,jdbcType=INTEGER},
      </if>
      <if test="useable != null" >
        useable = #{useable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.sys.model.Role">
    update sys_role
    set name = #{name,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      data_scope = #{dataScope,jdbcType=CHAR},
      office_id = #{officeId,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=INTEGER},
      is_sys = #{isSys,jdbcType=INTEGER},
      useable = #{useable,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>