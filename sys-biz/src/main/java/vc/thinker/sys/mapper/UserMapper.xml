<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vc.thinker.sys.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="vc.thinker.sys.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="regist_IP" property="registIp" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="office_id" property="officeId" jdbcType="BIGINT" />
    <result column="data_scope" property="dataScope" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="BOResultMap" type="vc.thinker.sys.bo.UserBO" extends="BaseResultMap" >
  	<result column="login_name" property="loginName" jdbcType="TIMESTAMP" />
  	<association property="company" columnPrefix="company_" resultMap="vc.thinker.sys.mapper.OfficeMapper.BaseResultMap"></association>
  	<association property="office" columnPrefix="office_" resultMap="vc.thinker.sys.mapper.OfficeMapper.BaseResultMap"></association>
  </resultMap>
  
  
  <select id="findUserByRole" resultMap="BOResultMap">
	SELECT
		u.*, ua.login_name,co.`name` as company_name ,oo.`name` as office_name
	FROM
		sys_user u
	INNER JOIN sys_user_role ur ON u.id = ur.user_id
	INNER JOIN sys_user_account ua ON u.id = ua.uid
	left join sys_office co on u.company_id = co.id
	left join sys_office oo on u.office_id = oo.id
	AND ua.account_type = #{accountType}
	WHERE
		ur.role_id=#{rid}
	order by u.id
  </select>
  
  <select id="findByOffice" resultMap="BOResultMap">
	SELECT
		u.*, ua.login_name
	FROM
		sys_user u
	INNER JOIN sys_user_account ua ON u.id = ua.uid
	AND ua.account_type = #{accountType}
	WHERE
		u.office_id =#{officeId}
	order by u.id
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_time, create_by, update_time, update_by, is_deleted, regist_IP, 
    company_id, office_id, data_scope
  </sql>
  <select id="selectByExample" parameterType="vc.thinker.sys.model.UserExample" resultMap="BOResultMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BOResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="vc.thinker.sys.model.UserExample" >
    delete from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="vc.thinker.sys.model.User" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_user (id, create_time, 
      create_by, update_time, update_by, 
      is_deleted, regist_IP, company_id, 
      office_id, data_scope)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=BIT}, #{registIp,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}, 
      #{officeId,jdbcType=BIGINT}, #{dataScope,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="vc.thinker.sys.model.User" useGeneratedKeys="true" keyProperty="id" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="registIp != null" >
        regist_IP,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="officeId != null" >
        office_id,
      </if>
      <if test="dataScope != null" >
        data_scope,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="registIp != null" >
        #{registIp,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="officeId != null" >
        #{officeId,jdbcType=BIGINT},
      </if>
      <if test="dataScope != null" >
        #{dataScope,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="vc.thinker.sys.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.registIp != null" >
        regist_IP = #{record.registIp,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.officeId != null" >
        office_id = #{record.officeId,jdbcType=BIGINT},
      </if>
      <if test="record.dataScope != null" >
        data_scope = #{record.dataScope,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      regist_IP = #{record.registIp,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=BIGINT},
      office_id = #{record.officeId,jdbcType=BIGINT},
      data_scope = #{record.dataScope,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="vc.thinker.sys.model.User" >
    update sys_user
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="registIp != null" >
        regist_IP = #{registIp,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="officeId != null" >
        office_id = #{officeId,jdbcType=BIGINT},
      </if>
      <if test="dataScope != null" >
        data_scope = #{dataScope,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="vc.thinker.sys.model.User" >
    update sys_user
    set 
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      regist_IP = #{registIp,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      office_id = #{officeId,jdbcType=BIGINT},
      data_scope = #{dataScope,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>